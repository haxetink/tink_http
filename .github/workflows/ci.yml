name: CI

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.haxe-version == 'nightly' }}

    strategy:
      matrix:
        haxe-version:
          - stable
          - nightly
        containers:
          - node
          - node-tcp
          # - neko-mod 
        targets:
          - js,node,php,neko,cpp
          - node

    steps:
    - name: Check out repo
      uses: actions/checkout@v3
    
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

    - name: Cache Yarn
      uses: actions/cache@v3
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
        
    - name: Cache Haxe
      uses: actions/cache@v3
      with:
        path: ${{ startsWith(runner.os, 'windows') && '%AppData%' || '~/haxe' }}
        key: ${{ runner.os }}-haxe
        
    - name: Install Lix
      uses: lix-pm/setup-lix@master
      
    - name: Install Haxe
      run: lix install haxe ${{ matrix.haxe-version }}
    
    - name: Install Haxe Libraries
      run: lix download
      
    - name: Run Test
      run: haxe master.hxml -D containers=${{ matrix.containers }} -D targets=${{ matrix.targets }}

  release:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/') # consider using the "release" event. see: https://docs.github.com/en/actions/reference/events-that-trigger-workflows#release
    
    steps:
    - name: Check out repo
      uses: actions/checkout@v3
    
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

    - name: Cache Yarn
      uses: actions/cache@v3
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
        
    - name: Cache Haxe
      uses: actions/cache@v3
      with:
        path: ${{ startsWith(runner.os, 'windows') && '%AppData%' || '~/haxe' }}
        key: ${{ runner.os }}-haxe
        
    - name: Install Lix
      uses: lix-pm/setup-lix@master
      
    - name: Install Haxe
      run: lix install haxe stable
    
    - name: Install Haxe Libraries
      run: lix download
      
    - name: Release to Haxelib
      run: lix run travix release
      env:
        HAXELIB_AUTH: ${{ secrets.HAXELIB_AUTH }}
    